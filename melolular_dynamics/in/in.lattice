# 模型参数

# variable potential_name     string data/Cu.eam.alloy  # 势函数文件名
# variable type_1             string Cu                 # 所选元素
# variable init_tempareture   equal   300               # 体系初始初始温度
# variable setted_tempareture equal    300              # nvt弛豫下的设定温度
# variable heat_flux          equal    10               # 体系引入热流大小
# variable lattice_steps      equal    1000             # 弛豫步数
# variable lattice_ensemble   string     nvt            # 弛豫所选系综名称
# variable lattice_x_max_1 equal 36.1                   # 体系x最大值
# variable sim_steps          equal     1000            # 热导率nve模拟下的弛豫时间

units metal
boundary s p p
atom_style atomic
timestep 0.01
neighbor 2 bin
neigh_modify check no

# 体系模型读取
read_data data/lattice.lmp

# 力场设置
# pair_style eam/alloy
# pair_coeff * * ${potential_name} ${type_1}
pair_style eam/alloy
pair_coeff * * ${potential_name} ${type_1}

# 能量最小化
variable lattice_min_steps equal ${lattice_steps}/10
min_style cg
minimize 0 0 ${lattice_min_steps} ${lattice_min_steps}
reset_timestep 0

# 温度初始化
velocity all create ${init_tempareture} 32133

# 弛豫
variable lattice_steps_thermo equal ${lattice_steps}/100
thermo ${lattice_steps_thermo}
thermo_style custom step temp
variable result_iterate_step equal step
variable result_iterate_temp equal temp
fix result_iterate all print ${lattice_steps_thermo} '${result_iterate_step} ${result_iterate_temp}' file result_iterate.txt screen no
if '${lattice_ensemble}==nvt' then 'fix 1 all ${lattice_ensemble} temp ${init_tempareture} ${setted_tempareture} 0.1'
if '${lattice_ensemble}==nve' then 'fix 1 all ${lattice_ensemble}'

variable lattice_steps_temp equal ${lattice_steps}/10
write_data data/lattice_final.lmp
run ${lattice_steps_temp}
write_data data/lattice_final.lmp
run ${lattice_steps_temp}
write_data data/lattice_final.lmp
run ${lattice_steps_temp}
write_data data/lattice_final.lmp
run ${lattice_steps_temp}
write_data data/lattice_final.lmp
run ${lattice_steps_temp}
write_data data/lattice_final.lmp
run ${lattice_steps_temp}
write_data data/lattice_final.lmp
run ${lattice_steps_temp}
write_data data/lattice_final.lmp
run ${lattice_steps_temp}
write_data data/lattice_final.lmp
run ${lattice_steps_temp}
write_data data/lattice_final.lmp
run ${lattice_steps_temp}
write_data data/lattice_final.lmp

unfix 1
unfix result_iterate
reset_timestep 0



# 热导率计算
# 设置热源、冷源区域
# 换区域
variable lattice_x_min_temp equal ${lattice_x_max_1}/20
variable lattice_x_min_temp_1 equal ${lattice_x_min_temp}*2
variable lattice_x_max_temp_2 equal ${lattice_x_max_1}-${lattice_x_min_temp}
variable lattice_x_max_temp_3 equal ${lattice_x_max_1}-2*${lattice_x_min_temp}
region          hot block ${lattice_x_min_temp} ${lattice_x_min_temp_1} INF INF INF INF
region          cold block ${lattice_x_max_temp_3} ${lattice_x_max_temp_2} INF INF INF INF
# 计算冷热源区域温度
compute         Thot all temp/region hot
compute         Tcold all temp/region cold
# 设定nve系综
fix		iterate_heat all nve
# 热源处持续输入热量
fix             hot all heat 1 ${heat_flux} region hot
# 冷源处持续抽走热量
variable heat_flux_temp equal -${heat_flux}
fix             cold all heat 1 ${heat_flux_temp} region cold
# 设定热力学参数输出
#c_是提取compute的结果

# 运行1000步
variable sim_steps_temp equal ${sim_steps}/10

compute		ke all ke/atom
# 根据原子动能计算原子温度
variable	temp atom c_ke/(1.5*8.625e-5)
compute         layers all chunk/atom bin/1d x lower 0.05 units reduced

variable sim_steps_thermo equal ${sim_steps}/10
# 计算块内原子温度
fix		2 all ave/chunk 1 50 ${sim_steps_thermo} layers v_temp file result_heat_1.txt
# 计算温差
variable        tdiff equal f_2[2][3]-f_2[19][3]
# 计算平均温差
fix             ave all ave/time 1 1 ${sim_steps_thermo} v_tdiff ave running start 0
# 输出平均温差

thermo_style    custom step temp c_Thot c_Tcold v_tdiff
thermo	        ${sim_steps_thermo}

fix final all print ${sim_steps_thermo} '${tdiff}' file final_tdiff.txt screen no
dump result_pdos all custom 100 result_pdos.txt id vx vy vz
dump 1 all atom 10 data/lattice.dump

run ${sim_steps_temp}
run ${sim_steps_temp}
run ${sim_steps_temp}
run ${sim_steps_temp}
run ${sim_steps_temp}
run ${sim_steps_temp}
run ${sim_steps_temp}
run ${sim_steps_temp}
run ${sim_steps_temp}
run ${sim_steps_temp}
